int infixToPostfix(char* exp) 
{ 
int i, k; 
struct Stack* stack = createStack(strlen(exp)); 
if(!stack) // See if stack was created successfully
return -1 ; 
for (i = 0, k = -1; exp[i]; ++i) 
{ 
if (isOperand(exp[i])) 
exp[++k] = exp[i]; 
else if (exp[i] == '(') 
push(stack, exp[i]); 
else if (exp[i] == ')') 
{ 
while (!isEmpty(stack) && peek(stack) != '(') 
exp[++k] = pop(stack); 
if (!isEmpty(stack) && peek(stack) != '(') 
return -1; // invalid expression
else
pop(stack); 
} 
else // an operator is encountered 
{ 
while (!isEmpty(stack) && Prec(exp[i]) <= Prec(peek(stack))) 
exp[++k] = pop(stack); 
push(stack, exp[i]); 
} 
} 
// pop all the operators from the stack 
while (!isEmpty(stack)) 
exp[++k] = pop(stack ); 
exp[++k] = '\0'; 
printf( "%s", exp ); 
    }
